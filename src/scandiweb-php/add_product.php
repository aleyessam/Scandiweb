<?php

error_reporting(E_ALL);
ini_set('display_errors', 1);

header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type");
header("Content-Type: application/json; charset=UTF-8");

// Require necessary files
require 'vendor/autoload.php'; // Ensure Composer's autoloader is included
require 'database.php';         // Include the Database class
require 'ProductRepository.php'; // Include the ProductRepository class
require_once 'Product.php';          // Include the Product class

try {
    // Get the raw POST data
    $json = file_get_contents('php://input');
    $productData = json_decode($json, true); // Decode JSON data into an associative array

    // Check if required fields are present
    if (!isset($productData['sku'], $productData['name'], $productData['price'], $productData['type'])) {
        echo json_encode(['error' => 'Missing required fields']);
        exit;
    }

    // Create a new database connection
    $database = new Database();
    $productRepo = new ProductRepository($database);

    // Create a new product object
    $product = new Product(
        null, // ID will be generated by the database
        $productData['sku'],
        $productData['name'],
        $productData['price'],
        $productData['type'],
        $productData['size'] ?? null,    // Use null coalescing operator
        $productData['weight'] ?? null,  // Use null coalescing operator
        $productData['height'] ?? null,  // Use null coalescing operator
        $productData['width'] ?? null,   // Use null coalescing operator
        $productData['length'] ?? null    // Use null coalescing operator
    );

    // Save the product using the repository
    $productRepo->save($product);

    echo json_encode(['success' => true, 'message' => 'Product added successfully']);
} catch (Exception $e) {
    echo json_encode(['error' => $e->getMessage()]);
}
